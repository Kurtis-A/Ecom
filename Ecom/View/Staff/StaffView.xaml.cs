using Ecom.Helpers;
using Ecom.Services;
using Ecom.ViewModel.Staff;
using Microsoft.Extensions.DependencyInjection;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;

namespace Ecom.View.Staff
{
    /// <summary>
    /// Interaction logic for StaffView.xaml
    /// </summary>
    public partial class StaffView : UserControl, INotifyPropertyChanged
    {
        private readonly StaffService _service;

        public event PropertyChangedEventHandler PropertyChanged;

        public StaffView(StaffService service)
        {
            InitializeComponent();

            _service = service;

            DataContext = this;

            Load();
        }

        public List<StaffListViewModel> StaffMembers { get; set; }

        private async void Load()
        {
            StaffMembers = new List<StaffListViewModel>(await _service.FetchAllUsers());
            OnPropertyChanged(nameof(StaffMembers));
        }

        private void DataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            PropertyDescriptor propertyDescriptor = (PropertyDescriptor)e.PropertyDescriptor;
            e.Column.Header = propertyDescriptor.DisplayName;

            if (propertyDescriptor.DisplayName == "HasErrors" || propertyDescriptor.DisplayName == "Id")
            {
                e.Cancel = true;
            }
        }

        private void DataGrid_AutoGeneratedColumns(object sender, System.EventArgs e)
        {
            DataGridTemplateColumn buttonColumn = new DataGridTemplateColumn();
            buttonColumn.Header = "Actions";
            buttonColumn.Width = 120;

            DataTemplate buttonTemplate = new DataTemplate();
            FrameworkElementFactory panelFactory = new FrameworkElementFactory(typeof(WrapPanel));
            buttonTemplate.VisualTree = panelFactory;

            FrameworkElementFactory buttonAFactory = new FrameworkElementFactory(typeof(Button));
            buttonAFactory.AddHandler(ButtonBase.ClickEvent, new RoutedEventHandler((o,e) => LoadStaffDetails((o as Button).DataContext as StaffListViewModel)));
            buttonAFactory.SetValue(StyleProperty, Application.Current.FindResource("EcomDataGridViewButton") as Style);
            buttonAFactory.SetValue(ToolTipProperty, "View Staff Member");
            panelFactory.AppendChild(buttonAFactory);

            buttonColumn.CellTemplate = buttonTemplate;

            DataGrid_StaffList.Columns.Add(buttonColumn);
        }

        private void LoadStaffDetails(StaffListViewModel viewModel)
        {
            StaffDetailVeiwer.Content = null;
            var details = Globals.ServiceProvider.GetRequiredService<StaffDetail>();
            details.Load(viewModel);
            StaffDetailVeiwer.Content = details;
        }

        protected void OnPropertyChanged([CallerMemberName] string name = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));
        }
    }
}
