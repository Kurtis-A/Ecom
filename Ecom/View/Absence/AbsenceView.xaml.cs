using Ecom.Helpers;
using Ecom.Services;
using Ecom.ViewModel.Absence;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using ToastNotifications.Messages;

namespace Ecom.View.Absence
{
    /// <summary>
    /// Interaction logic for AbsenceView.xaml
    /// </summary>
    public partial class AbsenceView : UserControl, INotifyPropertyChanged
    {
        private readonly AbsenceService _service;

        public event PropertyChangedEventHandler PropertyChanged;

        public AbsenceView(AbsenceService service)
        {
            InitializeComponent();

            _service = service;

            Load();

            DataContext = this;
        }

        public List<AbsenceViewModel> Absences { get; set; }

        public async void Load()
        {
            Absences = new List<AbsenceViewModel>(await _service.FetchAllAbsences());
            OnPropertyChanged(nameof(Absences));
        }

        protected void OnPropertyChanged([CallerMemberName] string name = null) => PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));

        private void DataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            PropertyDescriptor propertyDescriptor = (PropertyDescriptor)e.PropertyDescriptor;
            e.Column.Header = propertyDescriptor.DisplayName;

            if (propertyDescriptor.DisplayName == "HasErrors" || propertyDescriptor.DisplayName == "Id")
            {
                e.Cancel = true;
            }

            if (propertyDescriptor.PropertyType == typeof(DateTime))
            {
                (e.Column as DataGridTextColumn).Binding.StringFormat = "ddd dd MMM yyyy";
            }
        }

        private void DataGrid_AutoGeneratedColumns(object sender, System.EventArgs e)
        {
            DataGridTemplateColumn buttonColumn = new DataGridTemplateColumn();
            buttonColumn.Header = "Actions";
            buttonColumn.Width = 120;

            DataTemplate buttonTemplate = new DataTemplate();
            FrameworkElementFactory panelFactory = new FrameworkElementFactory(typeof(WrapPanel));
            buttonTemplate.VisualTree = panelFactory;

            //Todo: Add Check for permission
            FrameworkElementFactory viewButtonFactory = new FrameworkElementFactory(typeof(Button));
            viewButtonFactory.AddHandler(ButtonBase.ClickEvent, new RoutedEventHandler((o, e) => LoadAbsenceDetails()));
            viewButtonFactory.SetValue(StyleProperty, Application.Current.FindResource("EcomDataGridViewButton") as Style);
            viewButtonFactory.SetValue(ToolTipProperty, "View Absence");
            panelFactory.AppendChild(viewButtonFactory);

            //Todo: Add Check for permission
            FrameworkElementFactory deleteButtonFactory = new FrameworkElementFactory(typeof(Button));
            deleteButtonFactory.AddHandler(ButtonBase.ClickEvent, new RoutedEventHandler((o, e) => LoadAbsenceDetails()));
            deleteButtonFactory.SetValue(StyleProperty, Application.Current.FindResource("EcomDataGridDeleteButton") as Style);
            deleteButtonFactory.SetValue(ToolTipProperty, "Delete Absence");
            panelFactory.AppendChild(deleteButtonFactory);


            buttonColumn.CellTemplate = buttonTemplate;

            DataGrid_AbsenceList.Columns.Add(buttonColumn);
        }

        private void LoadAbsenceDetails()
        {
            Globals.Notifier.ShowInformation("Whoops! Not Implemented Yet");
        }
    }
}
